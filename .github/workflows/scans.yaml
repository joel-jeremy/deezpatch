name: Scans
on:
  workflow_run:
    workflows: [Gradle Build]
    branches: [main]
    types: [completed]
jobs:
  scans:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
      
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Snyk
        env:
          ORG_GRADLE_PROJECT_snykToken: ${{ secrets.SNYK_TOKEN }}
        run: ./gradlew snyk-test
        continue-on-error: true

      - name: Upload Snyk result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
      
      - name: Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: ./gradlew coveralls -S

  sonarqube:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
      
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: SonarQube
        env:
          ORG_GRADLE_PROJECT_sonarToken: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube -S