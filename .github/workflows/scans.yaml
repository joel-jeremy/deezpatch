name: Scans
on:
  workflow_run:
    workflows: [Gradle Build]
    branches: [main]
    types: [completed]
jobs:
  scans:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
      
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # - name: Snyk
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   run: ./gradlew snyk-test
      #   continue-on-error: true

      # - name: Upload Snyk result to GitHub Code Scanning
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: snyk.sarif
      
      - name: Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: ./gradlew check coveralls -S

  sonarqube:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
      
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: SonarQube
        env:
          ORG_GRADLE_PROJECT_sonarToken: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar -S